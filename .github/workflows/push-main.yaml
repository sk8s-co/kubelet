name: Build and Push Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions: write-all

jobs:
  versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo 'matrix=[
            {"kube_version": "v1.29.0", "go_version": "1.21"},
            {"kube_version": "v1.30.0", "go_version": "1.22"}
          ]' >> $GITHUB_OUTPUT

  build:
    needs: versions
    strategy:
      matrix:
        include: ${{ fromJson(needs.versions.outputs.matrix) }}
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    outputs:
      digest-${{ matrix.kube_version }}-${{ matrix.os }}: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v3
        if: matrix.os == 'ubuntu-latest'
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        id: build
        with:
          file: ${{ matrix.os == 'ubuntu-latest' && 'Dockerfile.linux' || 'Dockerfile.windows' }}
          platforms: ${{ matrix.os == 'ubuntu-latest' && 'linux/amd64,linux/arm64,linux/arm/v7,linux/ppc64le,linux/s390x' || 'windows/amd64' }}
          cache-from: type=gha,scope=kube-${{ matrix.kube_version }}-go-${{ matrix.go_version }}-${{ matrix.os }}
          cache-to: type=gha,mode=max,scope=kube-${{ matrix.kube_version }}-go-${{ matrix.go_version }}-${{ matrix.os }}
          pull: true
          push: true
          outputs: type=image,name=ghcr.io/${{ github.repository }},push-by-digest=true,name-canonical=true
          build-args: |
            GO_VERSION=${{ matrix.go_version }}
            KUBE_VERSION=${{ matrix.kube_version }}

  merge:
    needs: [versions, build]
    strategy:
      matrix:
        include: ${{ fromJson(needs.versions.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ matrix.kube_version }},enable=${{ github.event_name != 'pull_request' }}
            type=raw,value=${{ matrix.kube_version }}-{{sha}},enable=${{ github.event_name != 'pull_request' }}
            type=ref,event=pr,prefix=${{ matrix.kube_version }}-pr-
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        run: |
          # Extract tags from metadata
          TAGS=$(echo '${{ steps.meta.outputs.json }}' | jq -r '.tags[]')
          
          # Collect digests for this version from both OS builds
          LINUX_DIGEST="${{ needs.build.outputs[format('digest-{0}-ubuntu-latest', matrix.kube_version)] }}"
          WINDOWS_DIGEST="${{ needs.build.outputs[format('digest-{0}-windows-latest', matrix.kube_version)] }}"
          
          for tag in $TAGS; do
            docker buildx imagetools create -t $tag $LINUX_DIGEST $WINDOWS_DIGEST
          done
